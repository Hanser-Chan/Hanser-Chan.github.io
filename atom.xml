<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHS</title>
  <icon>https://www.gravatar.com/avatar/d4bf29af53cd0ca23bc2f03ebb86a4bc</icon>
  <subtitle>降本流末，而生万物</subtitle>
  <link href="http://hanser-chan.github.io/atom.xml" rel="self"/>
  
  <link href="http://hanser-chan.github.io/"/>
  <updated>2024-09-26T12:08:49.000Z</updated>
  <id>http://hanser-chan.github.io/</id>
  
  <author>
    <name>Hanser Chan</name>
    <email>memechs33@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub 学生认证教程</title>
    <link href="http://hanser-chan.github.io/2024/09/26/categories/University/join%20github%20edu/"/>
    <id>http://hanser-chan.github.io/2024/09/26/categories/University/join%20github%20edu/</id>
    <published>2024-09-26T10:00:00.000Z</published>
    <updated>2024-09-26T12:08:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何加入GitHub-Education"><a href="#如何加入GitHub-Education" class="headerlink" title="如何加入GitHub Education"></a>如何加入GitHub Education</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote><p>首先你需要有一个<code>GitHub</code>账号: <a href="https://github.com/">点这里跳转Github</a></p><p>❗ 这篇文章并不包含注册教程</p></blockquote><h3 id="School-Email"><a href="#School-Email" class="headerlink" title="School Email"></a>School Email</h3><p>在设置中找到email，并添加你自己的学校邮箱<code>example@school.edu.cn</code>。在下图中</p><h3 id="Payment-Information"><a href="#Payment-Information" class="headerlink" title="Payment Information"></a>Payment Information</h3><p>在设置中找到，并添加信息：</p><p><img src="https://s2.loli.net/2024/09/26/t8BFHmNW3Xafnhe.png" alt="1"></p><ol><li>名字必须填本名，填英文，比如<code>Zhang San</code></li><li>地址必须填学校所在地</li></ol><h3 id="Two-factor-authentication"><a href="#Two-factor-authentication" class="headerlink" title="Two-factor authentication"></a>Two-factor authentication</h3><p>在设置中找到Password，设置一个二次验证的方式，推荐使用手机app<code>authenticator</code>。在上图中</p><h3 id="学信网验证"><a href="#学信网验证" class="headerlink" title="学信网验证"></a>学信网验证</h3><p>前往这里：获得学信网的<a href="https://my.chsi.com.cn/archive/bab/index.action">在线验证报告</a>。</p><blockquote><p>这个是为了学历证明，其他方案自行搜索。听说手写也行？</p></blockquote><h3 id="Microsoft-Edge"><a href="#Microsoft-Edge" class="headerlink" title="Microsoft Edge"></a>Microsoft Edge</h3><p>我的方法是需要同时在电脑和手机上使用edge来操作。我的chrome在win本和mac上都会出现断开梯子不能正常获取位置的问题。</p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h3 id="选择身份"><a href="#选择身份" class="headerlink" title="选择身份"></a>选择身份</h3><p>首先进入申请入口：<a href="https://education.github.com/">跳转GitHub Education</a></p><p>点击<code>Join</code></p><p>进来后会跳转到这个界面：</p><p><img src="https://s2.loli.net/2024/09/26/kJa6Ac8BQpnbs5S.png" alt="2"></p><blockquote><p>❗❗❗ 在下图的继续前，请断开梯子，让浏览器能正常报送你的位置信息。</p></blockquote><p><img src="https://s2.loli.net/2024/09/26/fqJNHK7IDYUGQk1.png" alt="3"></p><h3 id="拍照认证"><a href="#拍照认证" class="headerlink" title="拍照认证"></a>拍照认证</h3><blockquote><p>如果只需要拍摄学历证明，就是正常的，如果需要拍摄证明你为什么不在学校，那可能就需要重复前面的步骤。</p></blockquote><p>在这个环节中，复制界面的网址，在手机上打开，然后在电脑上打开刚刚准备好的学信网的<a href="https://my.chsi.com.cn/archive/bab/index.action">在线验证报告</a>。</p><p>在手机上拍摄你的在线验证报告。</p><p>上传时等待一会。</p><p><img src="https://s2.loli.net/2024/09/26/upsQcRZLVX2wg98.png" alt="4"></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>等待一会刷新界面，如果出现了问卷界面，就祝贺你成功加入了GitHub edu。</p><p>如果没有出现，请检查你的学校邮箱，看看是否出现问题，如果出现，可能需要重新验证。</p><h2 id="可能出现的失败结果"><a href="#可能出现的失败结果" class="headerlink" title="可能出现的失败结果"></a>可能出现的失败结果</h2><h3 id="请关闭VPN"><a href="#请关闭VPN" class="headerlink" title="请关闭VPN"></a>请关闭VPN</h3><p>这个代表网站没有正常获取你的位置，请关闭梯子。尝试重新开始或尝试不同的浏览器。尝试下来，chrome，safari，小米可能都有不同的问题，只有在edge上才正常🤔。</p><h3 id="Please-select-proof-type-‘Other’-for-this-image"><a href="#Please-select-proof-type-‘Other’-for-this-image" class="headerlink" title="Please select proof type ‘Other’ for this image"></a>Please select proof type ‘Other’ for this image</h3><p>应该和上面是一样的。</p><h3 id="The-school-you-selected-does-not-appear-to-have-a-campus-location-in-your-country"><a href="#The-school-you-selected-does-not-appear-to-have-a-campus-location-in-your-country" class="headerlink" title="The school you selected does not appear to have a campus location in your country."></a>The school you selected does not appear to have a campus location in your country.</h3><p>同上。</p><h3 id="Please-complete-your-GitHub-billing-information"><a href="#Please-complete-your-GitHub-billing-information" class="headerlink" title="Please complete your GitHub billing information"></a>Please complete your <a href="https://github.com/settings/billing/payment_information">GitHub billing information</a></h3><p>这个是你的账单设置问题，请检查姓名和地址。地址必须是学校地址。</p><p>如果有其他问题，请尝试联系我。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何加入GitHub-Education&quot;&gt;&lt;a href=&quot;#如何加入GitHub-Education&quot; class=&quot;headerlink&quot; title=&quot;如何加入GitHub Education&quot;&gt;&lt;/a&gt;如何加入GitHub Education&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="University" scheme="http://hanser-chan.github.io/categories/University/"/>
    
    
    <category term="GitHub" scheme="http://hanser-chan.github.io/tags/GitHub/"/>
    
    <category term="Learning" scheme="http://hanser-chan.github.io/tags/Learning/"/>
    
  </entry>
  
  <entry>
    <title>将FFmpeg编译成单独的动态链接库</title>
    <link href="http://hanser-chan.github.io/2024/05/01/categories/Code/ff/"/>
    <id>http://hanser-chan.github.io/2024/05/01/categories/Code/ff/</id>
    <published>2024-05-01T03:00:00.000Z</published>
    <updated>2024-09-27T04:16:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="将FFmpeg编译成单独的动态链接库"><a href="#将FFmpeg编译成单独的动态链接库" class="headerlink" title="将FFmpeg编译成单独的动态链接库"></a>将FFmpeg编译成单独的动态链接库</h1><blockquote><p>该教程只实现在<strong>Linux(WSL)<strong>环境对</strong>ffmpeg4.4</strong> + <strong>android-ndk 21</strong>的编译</p><p>现成编译好的在<strong>release</strong>，只实现在安卓上的<strong>arm</strong>架构，x86请自行探索</p></blockquote><p>来这里找现成的：<a href="https://github.com/Hanser-Chan/ffmpeg-android-ndk-build-help/releases/tag/so">跳转到release</a><br>这有一个实现：<a href="https://github.com/Hanser-Chan/MI_HW/tree/master/BIGHW">小米训练营大作业</a></p><h2 id="链接为一个库"><a href="#链接为一个库" class="headerlink" title="链接为一个库"></a>链接为一个库</h2><h3 id="配置下载好ndk库"><a href="#配置下载好ndk库" class="headerlink" title="配置下载好ndk库"></a>配置下载好ndk库</h3><p>在终端运行：bash的用<code>~/.bashrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>文件里添加：记得更改自己的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export ANDROID_NDK=/home/ubuntu2204/Android/Sdk/ndk/21.3.6528147</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$ANDROID_NDK</span><br></pre></td></tr></table></figure><p>使用<code>:wq</code>退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc </span><br><span class="line"></span><br><span class="line">ndk-build -v</span><br></pre></td></tr></table></figure><h3 id="编译ffmpeg库"><a href="#编译ffmpeg库" class="headerlink" title="编译ffmpeg库"></a>编译ffmpeg库</h3><p>直接将<code>ndk-build-only.sh</code>放置在ffmpeg目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ndk-build-only.sh</span><br></pre></td></tr></table></figure><p>等待编译即可</p><h3 id="解读脚本"><a href="#解读脚本" class="headerlink" title="解读脚本"></a>解读脚本</h3><blockquote><p><strong>记得更换路径</strong>，下面已经标记所有可能需要更换路径的地方</p></blockquote><h4 id="整体设置"><a href="#整体设置" class="headerlink" title="整体设置"></a>整体设置</h4><ol><li><strong>设置变量</strong>：<ul><li><code>API=21</code>：指定了 Android 平台的 API 级别。</li><li><code>NDK=...</code>：指定了 Android NDK 的路径。</li><li><code>TOOLCHAIN=...</code>：指定了 LLVM 工具链的路径。</li><li><code>SYSROOT=...</code>：指定了系统根目录的路径。</li><li><code>ADDITIONAL_CONFIGURE_FLAG</code>：额外的配置标志，用于指定 FFmpeg 的配置参数。</li></ul></li><li><strong><code>build_android</code> 函数</strong>： 这是一个用于编译 FFmpeg 的函数，其中包含了 FFmpeg 配置和编译的命令。</li><li><strong>编译不同架构的 FFmpeg</strong>： 该脚本编译了两种不同架构的 FFmpeg 库，分别是 <code>arm64-v8a</code> 和 <code>armeabi-v7a</code>。每个架构都会有自己的设置和编译步骤。</li><li><strong>具体设置</strong>：<ul><li>每个架构的设置包括了输出路径、交叉编译器前缀、编译器路径等。这些设置确保了 FFmpeg 能够正确地在特定的架构上编译和运行。</li></ul></li><li><strong>调用 <code>build_android</code> 函数</strong>： 最后，脚本分别调用了 <code>build_android</code> 函数来编译 <code>arm64-v8a</code> 和 <code>armeabi-v7a</code> 架构的 FFmpeg 库。</li></ol><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ol><li><code>--prefix=$OUTPUT</code>：指定了安装 FFmpeg 的前缀路径，即编译后生成的文件将要被安装到的目录。</li><li><code>--target-os=android</code>：指定了目标操作系统是 Android。</li><li><code>--arch=$ARCH</code>：指定了架构类型，如 <code>arm64</code> 或 <code>arm</code>。</li><li><code>--cpu=$CPU</code>：指定了特定的 CPU 类型，如 <code>armv8-a</code> 或 <code>armv7-a</code>。</li><li><code>--enable-asm</code>：允许使用汇编代码优化。</li><li><code>--enable-neon</code>：在 ARM 架构上启用 NEON 指令集优化。</li><li><code>--enable-cross-compile</code>：启用交叉编译，这意味着你将在一个平台上为另一个平台编译代码。</li><li><code>--disable-shared</code>：禁用动态库（<code>.so</code> 文件）的生成。</li><li><code>--enable-static</code>：启用静态库（<code>.a</code> 文件）的生成。</li><li><code>--disable-doc</code>：禁用文档的生成。</li><li><code>--disable-ffplay</code>：禁用 FFplay 的编译。</li><li><code>--disable-ffprobe</code>：禁用 FFprobe 的编译。</li><li><code>--disable-symver</code>：禁用符号版本控制。</li><li><code>--disable-ffmpeg</code>：禁用 FFmpeg 二进制文件的编译。</li><li><code>--sysroot=$SYSROOT</code>：指定了系统根目录路径，这对于交叉编译是必需的。</li><li><code>--cross-prefix=$CROSS_PREFIX</code>：指定了交叉编译的前缀，用于交叉编译工具链的命令。</li><li><code>--cc=$CC</code>：指定了 C 编译器的路径。</li><li><code>--cxx=$CXX</code>：指定了 C++ 编译器的路径。</li><li><code>--extra-cflags=&quot;-fPIC&quot;</code>：传递额外的 C 语言编译器标志，<code>-fPIC</code> 表示生成与位置无关的代码，这对于生成共享库是必要的。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#make clean</span></span><br><span class="line">API=21</span><br><span class="line"><span class="comment">#记得换路径！！！这里必须换</span></span><br><span class="line">NDK=/home/cherry/workspace/Android/Sdk/ndk/21.3.6528147 </span><br><span class="line"><span class="comment">#记得换路径！！！</span></span><br><span class="line">TOOLCHAIN=<span class="variable">$NDK</span>/toolchains/llvm/prebuilt/linux-x86_64</span><br><span class="line"><span class="comment">#记得换路径！！！</span></span><br><span class="line">SYSROOT=<span class="variable">$TOOLCHAIN</span>/sysroot</span><br><span class="line"></span><br><span class="line">ADDITIONAL_CONFIGURE_FLAG=<span class="string">&quot;--enable-avdevice --enable-avcodec --enable-avformat --enable-swresample --enable-swscale --enable-postproc --enable-avfilter&quot;</span></span><br><span class="line"><span class="function"><span class="title">build_android</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;===========================1========================&quot;</span></span><br><span class="line">  ./configure \</span><br><span class="line">  --prefix=<span class="variable">$OUTPUT</span> \</span><br><span class="line">  --target-os=android \</span><br><span class="line">  --<span class="built_in">arch</span>=<span class="variable">$ARCH</span> \</span><br><span class="line">  --cpu=<span class="variable">$CPU</span> \</span><br><span class="line">  --enable-asm \</span><br><span class="line">  --enable-neon \</span><br><span class="line">  --enable-cross-compile \</span><br><span class="line">  --disable-shared \</span><br><span class="line">  --enable-static \</span><br><span class="line">  --disable-doc \</span><br><span class="line">  --disable-ffplay \</span><br><span class="line">  --disable-ffprobe \</span><br><span class="line">  --disable-symver \</span><br><span class="line">  --disable-ffmpeg \</span><br><span class="line">  --sysroot=<span class="variable">$SYSROOT</span> \</span><br><span class="line">  --cross-prefix=<span class="variable">$CROSS_PREFIX</span> \</span><br><span class="line">  --cc=<span class="variable">$CC</span> \</span><br><span class="line">  --cxx=<span class="variable">$CXX</span> \</span><br><span class="line">  --extra-cflags=<span class="string">&quot;-fPIC&quot;</span> \</span><br><span class="line">  <span class="variable">$ADDITIONAL_CONFIGURE_FLAG</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;===========================2=====================&quot;</span></span><br><span class="line">  make clean</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;=============================<span class="variable">$&#123;CC&#125;</span>===============&quot;</span></span><br><span class="line">  make -j16</span><br><span class="line">  make install</span><br><span class="line">  <span class="variable">$COMBILE_TOOLCHAIN_LD</span> \</span><br><span class="line">-rpath-link=<span class="variable">$COMBILE_PLATFORM</span>/usr/lib \</span><br><span class="line">-L<span class="variable">$COMBILE_PLATFORM</span>/usr/lib \</span><br><span class="line">-L<span class="variable">$OUTPUT</span>/lib \</span><br><span class="line">-soname libffmpeg.so -shared -nostdlib -Bsymbolic --whole-archive --no-undefined -o \</span><br><span class="line"><span class="variable">$OUTPUT</span>/libffmpeg.so \</span><br><span class="line">    libavcodec/libavcodec.a \</span><br><span class="line">    libavfilter/libavfilter.a \</span><br><span class="line">    libswresample/libswresample.a \</span><br><span class="line">    libavformat/libavformat.a \</span><br><span class="line">    libavutil/libavutil.a \</span><br><span class="line">    libavdevice/libavdevice.a \</span><br><span class="line">    libswscale/libswscale.a \</span><br><span class="line">    -lc -lm -lz -ldl -llog --dynamic-linker=/system/bin/linker \</span><br><span class="line">    <span class="variable">$COMBILE_TOOLCHAIN_GCC</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#arm64-v8a</span></span><br><span class="line">ARCH=arm64</span><br><span class="line">CPU=armv8-a</span><br><span class="line">CPU_INSTRUCT_COMMON=aarch64-linux-android</span><br><span class="line"><span class="comment">#记得换路径！！！这里必须换</span></span><br><span class="line">OUTPUT=/home/cherry/FFmpeg-n4.4.4/ffbuild/<span class="variable">$CPU</span></span><br><span class="line">CROSS_PREFIX=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-    <span class="comment">#AR AS LD等通用</span></span><br><span class="line">CC=<span class="variable">$TOOLCHAIN</span>/bin/aarch64-linux-android<span class="variable">$API</span>-clang     <span class="comment">#CC单独指定，非通用(因为ndk中CC与AR路径不同，后同理)</span></span><br><span class="line">CXX=<span class="variable">$TOOLCHAIN</span>/bin/aarch64-linux-android<span class="variable">$API</span>-clang++  <span class="comment">#CXX单独指定，非通用</span></span><br><span class="line">COMBILE_PLATFORM=<span class="variable">$NDK</span>/platforms/android-<span class="variable">$API</span>/arch-arm64 <span class="comment">#</span></span><br><span class="line">COMBILE_TOOLCHAIN_LD=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-ld</span><br><span class="line">COMBILE_TOOLCHAIN_GCC=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/lib/gcc/<span class="variable">$CPU_INSTRUCT_COMMON</span>/4.9.x/libgcc.a</span><br><span class="line">build_android</span><br><span class="line"> </span><br><span class="line"><span class="comment">#armeabi-v7a</span></span><br><span class="line">ARCH=arm</span><br><span class="line">CPU=armv7-a</span><br><span class="line">CPU_INSTRUCT_COMMON=arm-linux-androideabi</span><br><span class="line"><span class="comment">#记得换路径！！！这里必须换</span></span><br><span class="line">OUTPUT=/home/cherry/FFmpeg-n4.4.4/ffbuild/<span class="variable">$CPU</span></span><br><span class="line">CROSS_PREFIX=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-       <span class="comment">#AR AS LD等通用</span></span><br><span class="line">CC=<span class="variable">$TOOLCHAIN</span>/bin/armv7a-linux-androideabi<span class="variable">$API</span>-clang     <span class="comment">#CC单独指定，非通用</span></span><br><span class="line">CXX=<span class="variable">$TOOLCHAIN</span>/bin/armv7a-linux-androideabi<span class="variable">$API</span>-clang++  <span class="comment">#CXX单独指定，非通用</span></span><br><span class="line">COMBILE_PLATFORM=<span class="variable">$NDK</span>/platforms/android-<span class="variable">$API</span>/arch-arm</span><br><span class="line">COMBILE_TOOLCHAIN_LD=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-ld</span><br><span class="line">COMBILE_TOOLCHAIN_GCC=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/lib/gcc/<span class="variable">$CPU_INSTRUCT_COMMON</span>/4.9.x/libgcc.a</span><br><span class="line">build_android</span><br></pre></td></tr></table></figure><h2 id="链接为多个库"><a href="#链接为多个库" class="headerlink" title="链接为多个库"></a>链接为多个库</h2><p>使用<code>ndk-build-split.sh</code>，其余步骤一样。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;将FFmpeg编译成单独的动态链接库&quot;&gt;&lt;a href=&quot;#将FFmpeg编译成单独的动态链接库&quot; class=&quot;headerlink&quot; title=&quot;将FFmpeg编译成单独的动态链接库&quot;&gt;&lt;/a&gt;将FFmpeg编译成单独的动态链接库&lt;/h1&gt;&lt;blockquo</summary>
      
    
    
    
    <category term="Code" scheme="http://hanser-chan.github.io/categories/Code/"/>
    
    
    <category term="Linux" scheme="http://hanser-chan.github.io/tags/Linux/"/>
    
    <category term="C++" scheme="http://hanser-chan.github.io/tags/C/"/>
    
    <category term="xiaomi" scheme="http://hanser-chan.github.io/tags/xiaomi/"/>
    
  </entry>
  
</feed>
