<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHS</title>
  <icon>https://www.gravatar.com/avatar/d4bf29af53cd0ca23bc2f03ebb86a4bc</icon>
  <subtitle>降本流末，而生万物</subtitle>
  <link href="http://hanser-chan.github.io/atom.xml" rel="self"/>
  
  <link href="http://hanser-chan.github.io/"/>
  <updated>2024-10-14T12:26:14.991Z</updated>
  <id>http://hanser-chan.github.io/</id>
  
  <author>
    <name>Hanser Chan</name>
    <email>memechs33@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>408算法题汇总</title>
    <link href="http://hanser-chan.github.io/docs/csky408_algo/"/>
    <id>http://hanser-chan.github.io/docs/csky408_algo/</id>
    <published>2024-10-14T12:09:00.000Z</published>
    <updated>2024-10-14T12:26:14.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="408考研算法题汇总"><a href="#408考研算法题汇总" class="headerlink" title="408考研算法题汇总"></a>408考研算法题汇总</h1><p>最近复习408考研，我在做算法题的时候，顺便就把题目敲成代码，这样感觉比手写更好理解。</p><p>可以来我的库里面查看哦。<a href="https://github.com/Hanser-Chan/Algorithm-Library/tree/main/408">点我直达代码仓库</a></p><blockquote><p>计算机学科专业基础综合-&gt;<strong>数据结构算法题</strong>代码示例</p></blockquote><p>本目录结构 <code>考点 -&gt; 年份 + 题目</code>，整体思路参考每一项的<code>README.md</code>。</p><p>其中一些考点添加基本操作实现。</p><h2 id="数组应用"><a href="#数组应用" class="headerlink" title="数组应用"></a>数组应用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">└── 数组</span><br><span class="line">    ├── 2011中位数</span><br><span class="line">    ├── 2013主元素</span><br><span class="line">    └── 2018最小整数</span><br></pre></td></tr></table></figure><h2 id="链表应用"><a href="#链表应用" class="headerlink" title="链表应用"></a>链表应用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">└── 链表</span><br><span class="line">    ├── 2009链表倒数</span><br><span class="line">    ├── 2012后缀</span><br><span class="line">    ├── 2015删除重复</span><br><span class="line">    ├── 2019重新排列</span><br><span class="line">    └── LinkedListCpp</span><br></pre></td></tr></table></figure><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── 树</span><br><span class="line">    ├── 2014WPL</span><br><span class="line">    └── 2017中缀表达式</span><br></pre></td></tr></table></figure><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├── 图</span><br><span class="line">    ├── 2021一笔画</span><br><span class="line">    └── 2023K顶点</span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>整理了各种考试有代码需求的排序算法，包括快排和归并。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;408考研算法题汇总&quot;&gt;&lt;a href=&quot;#408考研算法题汇总&quot; class=&quot;headerlink&quot; title=&quot;408考研算法题汇总&quot;&gt;&lt;/a&gt;408考研算法题汇总&lt;/h1&gt;&lt;p&gt;最近复习408考研，我在做算法题的时候，顺便就把题目敲成代码，这样感觉比手写</summary>
      
    
    
    
    <category term="Code" scheme="http://hanser-chan.github.io/categories/Code/"/>
    
    
    <category term="C++" scheme="http://hanser-chan.github.io/tags/C/"/>
    
    <category term="408考研" scheme="http://hanser-chan.github.io/tags/408%E8%80%83%E7%A0%94/"/>
    
    <category term="算法" scheme="http://hanser-chan.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>《多余的话》读书笔记</title>
    <link href="http://hanser-chan.github.io/docs/book_duoyu/"/>
    <id>http://hanser-chan.github.io/docs/book_duoyu/</id>
    <published>2024-10-11T14:40:00.000Z</published>
    <updated>2024-10-13T13:02:09.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《多余的话》读书笔记"><a href="#《多余的话》读书笔记" class="headerlink" title="《多余的话》读书笔记"></a>《多余的话》读书笔记</h1><p><img src="https://img9.doubanio.com/view/subject/s/public/s3415785.jpg"></p><blockquote><p>📌 雄关漫道真如铁，而今迈步从头越。</p><p>​ ——毛泽东《忆秦娥·娄山关》</p></blockquote><p>在历史的长河中，瞿秋白先生以其独特的生命轨迹，为后人留下了深邃的思想印记。《多余的话》不仅是他个人心路历程的深刻剖析，更是对那个动荡年代中革命者心灵世界的真实写照。</p><p>瞿秋白，一位初时倾心文艺，后却投身政治洪流的传奇人物。少年时代的他，怀揣着对俄文的热爱远赴异国他乡，于俄罗斯的土地上见证了十月革命的辉煌，也悄然间与马克思主义结下了不解之缘。从一名翻译到中国共产党的核心领导者，他的每一步都充满了对理想的执着追求和对现实的深刻洞察。然而，命运的波折最终让他在福建长汀停下了前行的脚步，为革命事业献出了宝贵的生命。</p><p>当我翻开《多余的话》，那字里行间流露出的真挚与深邃，瞬间触动了我内心深处最柔软的部分。我仿佛看到了瞿先生站在历史的十字路口，以他那独特的视角审视着中国共产党的初创时期，也仿佛看到了自己在人生道路上所经历的种种起伏与变迁。</p><p>大学时光，曾是我思想最为活跃的时期。初入校园时，我对计算机专业满怀憧憬，以为那里将是实现自我价值的舞台。然而，随着学习的深入，那份最初的热情逐渐被现实的冷峻所冲淡。我曾在理想主义的天空下翱翔，却又在实用主义的泥潭中挣扎。那些日子里，我放纵自己于游戏与活动之中，学习似乎成了一种应付差事的存在。那时的我，或许正如同瞿先生笔下所描绘的那般，被一种没落的中国绅士阶级意识所侵蚀，陷入了虚无主义的泥沼。</p><blockquote><p>📌没落的中国绅士阶级意识之中，有些这样的成分：例如假惺惺的仁慈礼让、避免斗争……以致寄生虫式的隐士思想。 </p><p>​—— 瞿秋白《多余的话》</p></blockquote><p>然而，正如瞿先生在翻译工作中意外接触到马克思主义并因此改变人生轨迹一样，我也在某个不经意的瞬间找到了属于自己的“契机”。无论是蓝桥杯的竞赛经历，还是担任大创组长的责任担当，亦或是准备考研的艰辛历程，这些都成为了我重新审视自我、明确人生方向的重要契机。我开始意识到，自己必须像瞿先生那样勇敢地承担起领导自己人生的重任，去寻找属于自己的道路并为之奋斗。</p><p>“大胆尝试，小心求证”，他用自己的行动证明了即使只有一知半解的马克思主义知识也能在革命实践中发挥巨大作用；而我也将用自己的努力来证明即使面对未知的未来也能勇敢前行、不断探索。</p><blockquote><p>📌 还有一个更重要的“误会”，就是用马克思主义来研究中国的现代社会，部分的是研究中国历史的发端——也不得不由我来开始尝试 …… 虽然只有一知半解的马克思主义知识，却不由我不开始这个尝试：分析中国资本主义关系的发展程度，分析中国社会阶级分化的性质，阶级斗争的形势，阶级斗争和反帝国主义的民族解放运动的关系等等。 </p><p>​—— 瞿秋白《多余的话》</p></blockquote><p>当然，人生的道路从来都不是一帆风顺的。在前进的过程中我们难免会遇到挫折与失败、迷茫与困惑。但正如历史所展现的那样每一次的选择与尝试都是对自我的一次超越与重塑；每一次的碰壁与修改都是向正确方向迈进的一步。因此我们不应该否认自己的历史也不应该畏惧未来的挑战而是应该以更加坚定的步伐继续前行在不断地尝试与修正中成就更加辉煌的人生。</p><p>致未来！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;《多余的话》读书笔记&quot;&gt;&lt;a href=&quot;#《多余的话》读书笔记&quot; class=&quot;headerlink&quot; title=&quot;《多余的话》读书笔记&quot;&gt;&lt;/a&gt;《多余的话》读书笔记&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://img9.doubanio.com/vi</summary>
      
    
    
    
    <category term="Book" scheme="http://hanser-chan.github.io/categories/Book/"/>
    
    
    <category term="读书笔记" scheme="http://hanser-chan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    <category term="感想" scheme="http://hanser-chan.github.io/tags/%E6%84%9F%E6%83%B3/"/>
    
    <category term="历史" scheme="http://hanser-chan.github.io/tags/%E5%8E%86%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>创作目标</title>
    <link href="http://hanser-chan.github.io/docs/target/"/>
    <id>http://hanser-chan.github.io/docs/target/</id>
    <published>2024-10-01T15:59:59.000Z</published>
    <updated>2024-10-06T04:58:56.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="请大家督促"><a href="#请大家督促" class="headerlink" title="请大家督促"></a>请大家督促</h1><ul><li><input checked="" disabled="" type="checkbox"> 小米训练营攻略</li><li><input disabled="" type="checkbox"> PT 攻略</li><li><input disabled="" type="checkbox"> 技术分享</li><li><input disabled="" type="checkbox"> 项目文档</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;请大家督促&quot;&gt;&lt;a href=&quot;#请大家督促&quot; class=&quot;headerlink&quot; title=&quot;请大家督促&quot;&gt;&lt;/a&gt;请大家督促&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 小米训练营</summary>
      
    
    
    
    <category term="Live" scheme="http://hanser-chan.github.io/categories/Live/"/>
    
    
    <category term="目标" scheme="http://hanser-chan.github.io/tags/%E7%9B%AE%E6%A0%87/"/>
    
    <category term="生活" scheme="http://hanser-chan.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>小米就业实践训练营攻略</title>
    <link href="http://hanser-chan.github.io/docs/xiaomi_camp/"/>
    <id>http://hanser-chan.github.io/docs/xiaomi_camp/</id>
    <published>2024-10-01T04:00:00.000Z</published>
    <updated>2024-10-06T05:05:29.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小米训练营攻略"><a href="#小米训练营攻略" class="headerlink" title="小米训练营攻略"></a>小米训练营攻略</h1><p>该训练营全名为<code>小米集团就业实践训练营</code>，应该是面向华东地区高校的计算机专业的学生。</p><blockquote><p>训练营作业仓库已上线：<a href="https://github.com/Hanser-Chan/MI_HW">XiaoMiHWRepo</a></p><p>我们大概有 250+人参加，最终大约 40 人战到最后。很多人在第一周退出或被筛掉。</p><p>本人已获得小米 offer🥰</p></blockquote><p><img src="https://s2.loli.net/2024/10/02/RbALidc4OpIkC7e.jpg" alt="offer"></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><p>总分为两大组，每个大组会分小组，每小组配备一个班主任。班主任和讲师都是小米员工，有什么问题直接问，可以找他们聊天，提前一步了解小米的工作生活。</p><ul><li>C++：重点实现后台逻辑实现，主要培训内容有<code>多线程</code>，<code>交叉编译</code>，<code>操作系统</code>等。</li><li>Android：重点写一个安卓 app。最后要实现一个类微博的 app。</li></ul><p>选择 C++方向的可以完全跟着我的教程，安卓可参考。</p><p>其实，最终内容都是归于安卓，<code>C++组</code>大作业是给你一个写好页面和接口的 app，你需要使用<code>JNI+Cpp</code>实现相关功能。<code>安卓组</code>是需要独立开发一个类微博 app，包括界面和功能，小米会提供他们自己的类微博 API。</p><p>下面主要说<code>C++</code>组的准备工作。</p><h3 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h3><p>小米会提供他们的配置好的虚拟机，需要使用<code>Virtual Box</code>，<code>VM</code>不能正常识别。后面内容一定会使用这个虚拟机，而且很多内容是配好的，尽量不要使用自己的。</p><p>安卓组不需要虚拟机，只需要<code>Android Studio</code>。</p><h3 id="使用软件-本机"><a href="#使用软件-本机" class="headerlink" title="使用软件(本机)"></a>使用软件(本机)</h3><h4 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h4><p>两组都会使用到<code>Android Studio</code>，提前下好在<strong>本机</strong>，<strong>不要</strong>下在虚拟机。</p><p>C++组可以先配置<code>VSCode</code>，把编译器配好，至少能运行<code>c++11</code>。如果习惯 Clion 或者 VS 也可以。</p><h4 id="版本管理-居然好多人都不会"><a href="#版本管理-居然好多人都不会" class="headerlink" title="版本管理(居然好多人都不会)"></a>版本管理(居然好多人都不会)</h4><p><code>Git</code>必装，最好会使用<code>GitHub</code>，小米会使用<code>GitLab</code>来管理作业。操作是一样的。</p><p>至少熟练上传命令。如果你都熟练，那么第一天早上内容你已经掌握。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>小米老师可能会要求在虚拟机内创建仓库，没有必要，直接在本机就可以。</p><h4 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h4><p>最好本机和虚拟机都装三大编译器<code>g++</code>、<code>llvm</code> 和<code>clang</code>。</p><h3 id="小但必要"><a href="#小但必要" class="headerlink" title="小但必要"></a>小但必要</h3><ul><li><code>markdown</code>语法必学，写得好的<code>README</code> <strong>非常加分</strong>。</li><li>记得做的内容截图，增加你的可信度，老师不一定有时间运行所有人的代码，所以一定要写好<code>README</code>。</li><li>提前了解<code>(c)makefile</code>。</li><li>提前了解线程<code>std::thread</code>，不管最后大作业是否和我们相同，但一定会用到线程。</li></ul><h3 id="思想准备"><a href="#思想准备" class="headerlink" title="思想准备"></a>思想准备</h3><p>我认为既然有这个机会，就尽量把他搞完，不管最后有没有 offer，就当这是一个项目需要完成。</p><p>既然都看到这里，告诉大家：</p><ol><li><p>完成并结课一个月后，通过的同学发的是正式 offer，在你毕业后会和你签三方。</p></li><li><p>大三的实习可去可不去，不影响正式 offer。实习也是要筛选人去的，不是报名就能去。</p></li><li><p>如果不喜欢小米、不想工作、有其他安排，可以在第一星期结束后离开。</p></li></ol><p>有关于课程问题随时问我<a href="mailto:memechs33@outlook.com">memechs33@outlook.com</a></p><hr><h2 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h2><p>下面我们跟随列表走完这 14 天</p><table><thead><tr><th align="center">Day</th><th align="center">Course</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">Day01</td><td align="center">虚拟机，git 操作</td><td align="center">✅</td></tr><tr><td align="center">Day02</td><td align="center">cpp 基础，类操作</td><td align="center">✅</td></tr><tr><td align="center">Day03</td><td align="center">指针，数组，I&#x2F;O</td><td align="center">✅</td></tr><tr><td align="center">Day04</td><td align="center">STL</td><td align="center">✅</td></tr><tr><td align="center">Day05</td><td align="center">线程</td><td align="center">✅</td></tr><tr><td align="center">Day06</td><td align="center">网络</td><td align="center">🛠️</td></tr><tr><td align="center">Day07</td><td align="center">Android</td><td align="center">✅</td></tr><tr><td align="center">Day08</td><td align="center">OS</td><td align="center">🛠️</td></tr><tr><td align="center">Day09</td><td align="center">性能优化</td><td align="center">✅</td></tr><tr><td align="center">Day10</td><td align="center">编译</td><td align="center">🛠️</td></tr><tr><td align="center">Day11</td><td align="center">FFmpeg 编译</td><td align="center">✅</td></tr><tr><td align="center">Day12</td><td align="center">无</td><td align="center">🥰</td></tr><tr><td align="center">Day13</td><td align="center">BigHW(编译 ff 的 so 库，保存本地视频为 yuv)</td><td align="center">🤡</td></tr><tr><td align="center">Day14</td><td align="center">BigHW(实现播放&#x2F;暂停视频，播放音频)</td><td align="center">🤡</td></tr><tr><td align="center">Day15</td><td align="center">BigHW</td><td align="center">🥳</td></tr></tbody></table><blockquote><p>小米讲师会提问，回答问题可得记分牌，每节课后会计分，分高能得礼物。</p><p>这个分数不作为最终评价。</p></blockquote><h2 id="Day01"><a href="#Day01" class="headerlink" title="Day01"></a>Day01</h2><blockquote><ol><li><code>Git</code>配置、小米仓库(GitLab)配置</li><li><code>makefile</code>编译</li><li><code>gdb</code>调试</li></ol></blockquote><p>给班主任最容易留下好印象的就是第一天，很多人会配一天的<code>Git</code>，当你熟练使用<code>Git</code>，并且完美提交仓库，老师可能会根据你的目录结构风格让大家都参考你的。</p><p>特别一题的是 README 和截图，一定要让班主任很容易就看到你的思路和结果，前面就说到，班主任、讲师都是员工，他们也是打工仔，每天上课工作都比较累，<del>可能都不会细看你的代码</del>，所以，写好 README 和提供截图，能让你在第一天就脱颖而出。当然后面也要天天写 README。</p><p>然后关于作业部分，需要你早点准备好编译环境，想我在上文提及的编译器，请准备好，在<strong>本机和虚拟机</strong>(小米提供的会配好)都要配置，Windows 环境下编译可能不太方便，可以先自己搞个<code>Ubuntu</code>来试一下，当然，像博主我双持 Win 和 Mac，前期的一些编译，我直接交给 Mac 做，只是后面交叉编译对环境和 CPU 有要求，我才启用 Win 游戏本。</p><p>第一天总体非常轻松。</p><h2 id="Day02-03-04"><a href="#Day02-03-04" class="headerlink" title="Day02&#x2F;03&#x2F;04"></a>Day02&#x2F;03&#x2F;04</h2><blockquote><p>这几天都是有关<code>C++</code>基本操作，<del>不必理会</del>。</p></blockquote><p>如果很熟练了，我建议你用这几天时间，把后面的<code>std::thread</code>好好学一下，这是整个训练营的重点，这个不管是训练营还是工作还是项目，线程管理都非常重要。</p><p>然后推荐了解一下<code>Morden C++</code>，了解一下<code>C++17,C++20</code>新标准，我们这组的班主任就很看重这点，以后工作也可能用上。但是<code>Android</code>最高只支持到<code>C++17</code>(NDK15)(2024.5)，后续可能会支持更新标准。</p><p>前面几天都会非常轻松。</p><h2 id="Day05"><a href="#Day05" class="headerlink" title="Day05"></a>Day05</h2><blockquote><p>正式开始学习<code>std::thread</code>，请认真学习这部分内容。</p><ol><li><code>RAII</code>:资源获取即初始化，使用<code>thread</code>构造初始化线程，阻塞线程</li><li><code>mutex</code>互斥锁</li><li>子线程，<code>std::future</code>，<code>std::future</code>，<code>std::promise</code>等操作</li></ol></blockquote><p>这是整个训练营中最重要的课，老师可能讲的会比较浅。如有不懂，问老师或速查文档、GPT。要在这节课训练<strong>手写</strong>线程代码的实现。</p><blockquote><p>线程管理是现在非常重要的项目，在后端，测试端，甚至机器学习类的工作中都一定会遇到相关问题。</p></blockquote><h2 id="Day06"><a href="#Day06" class="headerlink" title="Day06"></a>Day06</h2><blockquote><p>学习网络编程相关操作，这块要看老师安排，可能会要求在训练营最后实现。</p></blockquote><p>这算是第二重要的内容，基本上 C++方向的工作都要和网络打交道。也要训练这类代码，但是我们最后并未要求实现网络内容。</p><h2 id="Day07"><a href="#Day07" class="headerlink" title="Day07"></a>Day07</h2><blockquote><p>这天的内容直接和大作业挂钩，必须认真跟着操作最后的动态链接库的部分。</p><ol><li><code>Android Studio</code>相关操作</li><li>❗ 交叉编译 重点</li><li><code>JNI</code></li></ol></blockquote><p>我们学校是开的有 Android 课程，所以基本操作我们都会，如果你并没学过<code>Android Studio</code>，请你认真学习这一天的所有内容。</p><p>交叉编译一定要好好搞，自己亲自在虚拟机中编译，建议不要用自己的系统。学一学怎么写<code>shell批处理脚本</code>。</p><p><code>JNI</code>可以多了解一下，反正最后也要用到，在大作业的答辩里，我的班主任问了我<code>JNI</code>的作用性质等问题。</p><h2 id="第一周结束"><a href="#第一周结束" class="headerlink" title="第一周结束"></a>第一周结束</h2><p>在第七天，也就是安卓课下课的时候，负责人会发一个问卷，主要是了解你的就业意向，如果你认为小米工作很适合你，或者你有其他安排但你也想继续完成的，请你所有都填<code>想就业</code>有关的，如果不想玩了，想放个 7 天小长假，直接就填其他的就好了。但是不要侥幸，不要么棱两可，有同学又填就业又填考研的，直接被刷下来了。</p><h2 id="Day08"><a href="#Day08" class="headerlink" title="Day08"></a>Day08</h2><blockquote><p>有关操作系统的内容，课上老师应该会带大家编译 Linux0.1 版本。作业可能让你重写内核，当时我们没人做出来。</p></blockquote><p>在这天老登就要开始给你上强度了，前面听老师讲操作系统历史还挺好玩的，后面开始让你改内核代码，就开始爽起来了。</p><h2 id="Day09"><a href="#Day09" class="headerlink" title="Day09"></a>Day09</h2><blockquote><p>今天主要玩玩性能优化工具和一些网络工具，后期最轻松的一天。</p></blockquote><p>没什么说的，好好玩下这些工具。</p><h2 id="Day10"><a href="#Day10" class="headerlink" title="Day10"></a>Day10</h2><blockquote><p>学习编译工具，写 makefile 和 cmakefile。</p></blockquote><p>留意一下<code>cmakefile</code>，后面编译大作业使用到<code>JNI</code>也是要写滴。多编译几个项目试下。</p><h2 id="Day11"><a href="#Day11" class="headerlink" title="Day11"></a>Day11</h2><blockquote><p>今天要开始起飞了，开始介绍 FFmpeg。</p></blockquote><p>好好学，对大作业很有帮助。锻炼使用 FF 的 API。从现在开始，你可能会遇到全班一起陷入无法运行的情况，加油，希望你是第一个跑起来的。</p><h2 id="Day12-Day14"><a href="#Day12-Day14" class="headerlink" title="Day12-Day14"></a>Day12-Day14</h2><blockquote><p>最折磨人的来了。</p><ol><li>将<code>FFmpeg4</code>交叉编译成一个独立的动态链接库。</li><li>不用写<code>Java</code>和<code>xml</code>任何安卓代码，小米会给你一个写好的简陋的框架。</li><li>使用<code>JNI</code>，这里有个大坑。</li><li>编写你的<code>C++</code>代码。请不要吝啬你的才华，注意安卓支持的 C++版本哦，别太新了</li></ol></blockquote><h3 id="Day12"><a href="#Day12" class="headerlink" title="Day12"></a>Day12</h3><p>这一天基本上都在搞编译，尝试自己去写下<code>shell</code>脚本，我们整个组基本到第 13 天下才差不多全员编译通过，这时候你都没多少时间去搞真正的代码了。</p><p>Tips：<strong>不要一味去复制粘贴别人的脚本代码，修改并尝试自己搞通</strong>。</p><h3 id="Day13"><a href="#Day13" class="headerlink" title="Day13"></a>Day13</h3><p>如果你到了第 13 天都还没编译好，我这里还有小秘籍，请你自行寻找，找到了记得点个:heart:。</p><p>代码部分我就爱莫能助了，请你自己去写吧，我的实现并不完整而且可能有很多 bug，我自己复盘下来，我觉得应该这样优化更好：</p><ul><li>可以引入线程库管理线程</li><li>将<code>Player</code>封装成类，没封装的看得很难受</li><li>先搞视频操作，再搞音频</li></ul><h3 id="Day14"><a href="#Day14" class="headerlink" title="Day14"></a>Day14</h3><p>在晚上 8 点前提交你的代码。恭喜你！这天晚上会有一个小答辩，给你的班主任描述你的项目，他会给你这 2 周来的作业打分，像我的大作业虽然很多都没实现，但是前面小作业拿了很多分，有可能老师还会问你一些八股文，可以提前准备一下。(像个小面试，但是没有那么紧张)</p><p>小面试可能涉及到的问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TCP/UDP</span><br><span class="line">JNI</span><br><span class="line">C++的一些关键字、操作</span><br><span class="line">OS</span><br><span class="line">HTTP等</span><br></pre></td></tr></table></figure><hr><h1 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h1><p>该攻略于 2024.10.5 完成于南京。</p><p>希望大家多多赞赏 ​。​🤩​</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;小米训练营攻略&quot;&gt;&lt;a href=&quot;#小米训练营攻略&quot; class=&quot;headerlink&quot; title=&quot;小米训练营攻略&quot;&gt;&lt;/a&gt;小米训练营攻略&lt;/h1&gt;&lt;p&gt;该训练营全名为&lt;code&gt;小米集团就业实践训练营&lt;/code&gt;，应该是面向华东地区高校的计算机专业的</summary>
      
    
    
    
    <category term="University" scheme="http://hanser-chan.github.io/categories/University/"/>
    
    
    <category term="xiaomi" scheme="http://hanser-chan.github.io/tags/xiaomi/"/>
    
    <category term="就业" scheme="http://hanser-chan.github.io/tags/%E5%B0%B1%E4%B8%9A/"/>
    
    <category term="攻略" scheme="http://hanser-chan.github.io/tags/%E6%94%BB%E7%95%A5/"/>
    
    <category term="简历" scheme="http://hanser-chan.github.io/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>获取follow邀请码(可预约10.20)</title>
    <link href="http://hanser-chan.github.io/docs/follow_invite/"/>
    <id>http://hanser-chan.github.io/docs/follow_invite/</id>
    <published>2024-09-28T13:23:34.000Z</published>
    <updated>2024-10-18T01:00:32.932Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎大家来关注我的-follow"><a href="#欢迎大家来关注我的-follow" class="headerlink" title="欢迎大家来关注我的 follow"></a>欢迎大家来关注我的 follow</h1><p>将这个网址复制到 follow 加入就可以咯<br><a href="https://hanser-chan.github.io/atom.xml">https://hanser-chan.github.io/atom.xml</a></p><h1 id="获取我的-follow-邀请码"><a href="#获取我的-follow-邀请码" class="headerlink" title="获取我的 follow 邀请码"></a>获取我的 follow 邀请码</h1><p>可邮箱联系我：<a href="mailto:&#109;&#x65;&#109;&#x65;&#99;&#104;&#x73;&#51;&#x33;&#x40;&#x6f;&#x75;&#x74;&#x6c;&#111;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;">&#109;&#x65;&#109;&#x65;&#99;&#104;&#x73;&#51;&#x33;&#x40;&#x6f;&#x75;&#x74;&#x6c;&#111;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;</a></p><p>预计 10.20 能新发一份邀请码</p><p>欢迎大家来订阅我创建的列表哦：<a href="https://app.follow.is/list/67124079970119680">跳转到列表页</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;欢迎大家来关注我的-follow&quot;&gt;&lt;a href=&quot;#欢迎大家来关注我的-follow&quot; class=&quot;headerlink&quot; title=&quot;欢迎大家来关注我的 follow&quot;&gt;&lt;/a&gt;欢迎大家来关注我的 follow&lt;/h1&gt;&lt;p&gt;将这个网址复制到 follo</summary>
      
    
    
    
    <category term="Code" scheme="http://hanser-chan.github.io/categories/Code/"/>
    
    
    <category term="rss" scheme="http://hanser-chan.github.io/tags/rss/"/>
    
    <category term="follow" scheme="http://hanser-chan.github.io/tags/follow/"/>
    
  </entry>
  
  <entry>
    <title>将博客转换成rss并上线follow</title>
    <link href="http://hanser-chan.github.io/docs/hexo_rss/"/>
    <id>http://hanser-chan.github.io/docs/hexo_rss/</id>
    <published>2024-09-28T11:47:29.000Z</published>
    <updated>2024-10-06T04:55:08.407Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-hexo-generator-把博客转换成-rss"><a href="#使用-hexo-generator-把博客转换成-rss" class="headerlink" title="使用 hexo generator 把博客转换成 rss"></a>使用 hexo generator 把博客转换成 rss</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="添加功能插件，在-hexo-项目根目录下执行该命令"><a href="#添加功能插件，在-hexo-项目根目录下执行该命令" class="headerlink" title="添加功能插件，在 hexo 项目根目录下执行该命令"></a>添加功能插件，在 hexo 项目根目录下执行该命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h3 id="在-hexo-根目录下的-config-yml-文件中添加配置"><a href="#在-hexo-根目录下的-config-yml-文件中添加配置" class="headerlink" title="在 hexo 根目录下的 _config.yml 文件中添加配置"></a>在 hexo 根目录下的 _config.yml 文件中添加配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">订阅RSS</span></span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: false</span><br></pre></td></tr></table></figure><p>可选项配置含义：(不想搞就默认上方)</p><p><code>type</code>: RSS 的类型(atom&#x2F;rss2)<br><code>path</code>: 文件路径，默认是 <code>atom.xml</code>或者<code>rss2.xml</code><br><code>limit</code>: 展示文章的数量,使用 <code>0</code> 或则 <code>false</code> 代表展示全部<br><code>hub</code>: URL of the PubSubHubbub hubs (如果使用不到可以为空)<br><code>content</code>: （可选）设置 true 可以在 RSS 文件中包含文章全部内容，默认：<code>false</code><br><code>content_limit</code>: （可选）摘要中使用的帖子内容的默认长度。 仅在内容设置为<code>false</code>且未显示自定义帖子描述时才使用。<br><code>content_limit_delim</code>: （可选）如果 content_limit 用于缩短 post 内容，则仅在此分隔符的最后一次出现时进行剪切，然后才达到字符限制。默认不使用。<br><code>icon</code>: （可选）自定义订阅图标，默认设置为主配置中指定的图标。<br><code>order_by</code>: 订阅内容的顺序。 (默认: -date)</p><h3 id="在-theme-目录下的-config-yml-文件中添加配置"><a href="#在-theme-目录下的-config-yml-文件中添加配置" class="headerlink" title="在 theme 目录下的 _config.yml 文件中添加配置"></a>在 theme 目录下的 _config.yml 文件中添加配置</h3><blockquote><p>如果是按照安知鱼视频配置的，应该在根目录的_config.anzhiyu.yml 里面添加</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><h3 id="重新生成博客静态文件并发布"><a href="#重新生成博客静态文件并发布" class="headerlink" title="重新生成博客静态文件并发布"></a>重新生成博客静态文件并发布</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>在 <code>public</code> 文件夹中就会生成 <code>atom.xml</code> 文件，部署后直接在根目录中访问该文件即可，在浏览器上就可以直接访问<code>你的网页/atom.xml</code></p><h2 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h2><p>在这里我们使用新的 rss 阅读器<code>follow</code>订阅并认证我们的 rss。</p><h3 id="找到发现页"><a href="#找到发现页" class="headerlink" title="找到发现页"></a>找到发现页</h3><p>这里我使用的是 mac 的软件版 follow，左上角头像旁可以找到<code>+</code>进入发现页</p><p><img src="https://s2.loli.net/2024/09/28/3H6bUKasZAWqnuo.png" alt="discover"></p><p>在框中输入你的<code>博客地址/atom.xml</code>，预览，添加</p><h3 id="认证你的-rss"><a href="#认证你的-rss" class="headerlink" title="认证你的 rss"></a>认证你的 rss</h3><p>右键你自己的订阅，可以找到认证，follow 提供 3 种认证方式，我们选择最后一种 xml。你现在需要往自己的 xml 中添加一小段代码。</p><p>找到博客目录下的<code>public/atom.xml</code></p><p>在这里面直接添加给你的代码，然后直接<code>hexo d</code>发布，不要<code>hexo clean</code>或<code>hexo g</code>。</p><p><img src="https://s2.loli.net/2024/09/28/envW1ExGktmIBud.png" alt="1"></p><p>最后点击认证，即可成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用-hexo-generator-把博客转换成-rss&quot;&gt;&lt;a href=&quot;#使用-hexo-generator-把博客转换成-rss&quot; class=&quot;headerlink&quot; title=&quot;使用 hexo generator 把博客转换成 rss&quot;&gt;&lt;/a&gt;使用</summary>
      
    
    
    
    <category term="Code" scheme="http://hanser-chan.github.io/categories/Code/"/>
    
    
    <category term="rss" scheme="http://hanser-chan.github.io/tags/rss/"/>
    
    <category term="hexo" scheme="http://hanser-chan.github.io/tags/hexo/"/>
    
    <category term="follow" scheme="http://hanser-chan.github.io/tags/follow/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 学生认证教程</title>
    <link href="http://hanser-chan.github.io/docs/github_edu/"/>
    <id>http://hanser-chan.github.io/docs/github_edu/</id>
    <published>2024-09-26T10:00:00.000Z</published>
    <updated>2024-10-06T05:05:38.336Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何加入-GitHub-Education"><a href="#如何加入-GitHub-Education" class="headerlink" title="如何加入 GitHub Education"></a>如何加入 GitHub Education</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote><p>首先你需要有一个<code>GitHub</code>账号: <a href="https://github.com/">点这里跳转 Github</a></p><p>❗ 这篇文章并不包含注册教程</p></blockquote><h3 id="School-Email"><a href="#School-Email" class="headerlink" title="School Email"></a>School Email</h3><p>在设置中找到 email，并添加你自己的学校邮箱<code>example@school.edu.cn</code>。在下图中</p><h3 id="Payment-Information"><a href="#Payment-Information" class="headerlink" title="Payment Information"></a>Payment Information</h3><p>在设置中找到，并添加信息：</p><p><img src="https://s2.loli.net/2024/09/26/t8BFHmNW3Xafnhe.png" alt="1"></p><ol><li>名字必须填本名，填英文，比如<code>Zhang San</code></li><li>地址必须填学校所在地</li></ol><h3 id="Two-factor-authentication"><a href="#Two-factor-authentication" class="headerlink" title="Two-factor authentication"></a>Two-factor authentication</h3><p>在设置中找到 Password，设置一个二次验证的方式，推荐使用手机 app<code>authenticator</code>。在上图中</p><h3 id="学信网验证"><a href="#学信网验证" class="headerlink" title="学信网验证"></a>学信网验证</h3><p>前往这里：获得学信网的<a href="https://my.chsi.com.cn/archive/bab/index.action">在线验证报告</a>。</p><blockquote><p>这个是为了学历证明，其他方案自行搜索。听说手写也行？</p></blockquote><h3 id="Microsoft-Edge"><a href="#Microsoft-Edge" class="headerlink" title="Microsoft Edge"></a>Microsoft Edge</h3><p>我的方法是需要同时在电脑和手机上使用 edge 来操作。我的 chrome 在 win 本和 mac 上都会出现断开梯子不能正常获取位置的问题。</p><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h3 id="选择身份"><a href="#选择身份" class="headerlink" title="选择身份"></a>选择身份</h3><p>首先进入申请入口：<a href="https://education.github.com/">跳转 GitHub Education</a></p><p>点击<code>Join</code></p><p>进来后会跳转到这个界面：</p><p><img src="https://s2.loli.net/2024/09/26/kJa6Ac8BQpnbs5S.png" alt="2"></p><blockquote><p>❗❗❗ 在下图的继续前，请断开梯子，让浏览器能正常报送你的位置信息。</p></blockquote><p><img src="https://s2.loli.net/2024/09/26/fqJNHK7IDYUGQk1.png" alt="3"></p><h3 id="拍照认证"><a href="#拍照认证" class="headerlink" title="拍照认证"></a>拍照认证</h3><blockquote><p>如果只需要拍摄学历证明，就是正常的，如果需要拍摄证明你为什么不在学校，那可能就需要重复前面的步骤。</p></blockquote><p>在这个环节中，复制界面的网址，在手机上打开，然后在电脑上打开刚刚准备好的学信网的<a href="https://my.chsi.com.cn/archive/bab/index.action">在线验证报告</a>。</p><p>在手机上拍摄你的在线验证报告。</p><p>上传时等待一会。</p><p><img src="https://s2.loli.net/2024/09/26/upsQcRZLVX2wg98.png" alt="4"></p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>等待一会刷新界面，如果出现了问卷界面，就祝贺你成功加入了 GitHub edu。</p><p>如果没有出现，请检查你的学校邮箱，看看是否出现问题，如果出现，可能需要重新验证。</p><h2 id="可能出现的失败结果"><a href="#可能出现的失败结果" class="headerlink" title="可能出现的失败结果"></a>可能出现的失败结果</h2><h3 id="请关闭-VPN"><a href="#请关闭-VPN" class="headerlink" title="请关闭 VPN"></a>请关闭 VPN</h3><p>这个代表网站没有正常获取你的位置，请关闭梯子。尝试重新开始或尝试不同的浏览器。尝试下来，chrome，safari，小米可能都有不同的问题，只有在 edge 上才正常 🤔。</p><h3 id="Please-select-proof-type-‘Other’-for-this-image"><a href="#Please-select-proof-type-‘Other’-for-this-image" class="headerlink" title="Please select proof type ‘Other’ for this image"></a>Please select proof type ‘Other’ for this image</h3><p>应该和上面是一样的。</p><h3 id="The-school-you-selected-does-not-appear-to-have-a-campus-location-in-your-country"><a href="#The-school-you-selected-does-not-appear-to-have-a-campus-location-in-your-country" class="headerlink" title="The school you selected does not appear to have a campus location in your country."></a>The school you selected does not appear to have a campus location in your country.</h3><p>同上。</p><h3 id="Please-complete-your-GitHub-billing-information"><a href="#Please-complete-your-GitHub-billing-information" class="headerlink" title="Please complete your GitHub billing information"></a>Please complete your <a href="https://github.com/settings/billing/payment_information">GitHub billing information</a></h3><p>这个是你的账单设置问题，请检查姓名和地址。地址必须是学校地址。</p><p>如果有其他问题，请尝试联系我。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何加入-GitHub-Education&quot;&gt;&lt;a href=&quot;#如何加入-GitHub-Education&quot; class=&quot;headerlink&quot; title=&quot;如何加入 GitHub Education&quot;&gt;&lt;/a&gt;如何加入 GitHub Education&lt;/</summary>
      
    
    
    
    <category term="University" scheme="http://hanser-chan.github.io/categories/University/"/>
    
    
    <category term="GitHub" scheme="http://hanser-chan.github.io/tags/GitHub/"/>
    
    <category term="Learning" scheme="http://hanser-chan.github.io/tags/Learning/"/>
    
  </entry>
  
  <entry>
    <title>将FFmpeg编译成单独的动态链接库</title>
    <link href="http://hanser-chan.github.io/docs/FFmpeg_so/"/>
    <id>http://hanser-chan.github.io/docs/FFmpeg_so/</id>
    <published>2024-05-01T03:00:00.000Z</published>
    <updated>2024-10-06T05:06:07.146Z</updated>
    
    <content type="html"><![CDATA[<h1 id="将-FFmpeg-编译成单独的动态链接库"><a href="#将-FFmpeg-编译成单独的动态链接库" class="headerlink" title="将 FFmpeg 编译成单独的动态链接库"></a>将 FFmpeg 编译成单独的动态链接库</h1><blockquote><p>该教程只实现在<strong>Linux(WSL)<strong>环境对</strong>ffmpeg4.4</strong> + <strong>android-ndk 21</strong>的编译</p><p>现成编译好的在<strong>release</strong>，只实现在安卓上的<strong>arm</strong>架构，x86 请自行探索</p></blockquote><p>来这里找现成的：<a href="https://github.com/Hanser-Chan/ffmpeg-android-ndk-build-help/releases/tag/so">跳转到 release</a><br>这有一个实现：<a href="https://github.com/Hanser-Chan/MI_HW/tree/master/BIGHW">小米训练营大作业</a></p><h2 id="链接为一个库"><a href="#链接为一个库" class="headerlink" title="链接为一个库"></a>链接为一个库</h2><h3 id="配置下载好-ndk-库"><a href="#配置下载好-ndk-库" class="headerlink" title="配置下载好 ndk 库"></a>配置下载好 ndk 库</h3><p>在终端运行：bash 的用<code>~/.bashrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>文件里添加：记得更改自己的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export ANDROID_NDK=/home/ubuntu2204/Android/Sdk/ndk/21.3.6528147</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$ANDROID_NDK</span><br></pre></td></tr></table></figure><p>使用<code>:wq</code>退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line">ndk-build -v</span><br></pre></td></tr></table></figure><h3 id="编译-ffmpeg-库"><a href="#编译-ffmpeg-库" class="headerlink" title="编译 ffmpeg 库"></a>编译 ffmpeg 库</h3><p>直接将<code>ndk-build-only.sh</code>放置在 ffmpeg 目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ndk-build-only.sh</span><br></pre></td></tr></table></figure><p>等待编译即可</p><h3 id="解读脚本"><a href="#解读脚本" class="headerlink" title="解读脚本"></a>解读脚本</h3><blockquote><p><strong>记得更换路径</strong>，下面已经标记所有可能需要更换路径的地方</p></blockquote><h4 id="整体设置"><a href="#整体设置" class="headerlink" title="整体设置"></a>整体设置</h4><ol><li><strong>设置变量</strong>：<ul><li><code>API=21</code>：指定了 Android 平台的 API 级别。</li><li><code>NDK=...</code>：指定了 Android NDK 的路径。</li><li><code>TOOLCHAIN=...</code>：指定了 LLVM 工具链的路径。</li><li><code>SYSROOT=...</code>：指定了系统根目录的路径。</li><li><code>ADDITIONAL_CONFIGURE_FLAG</code>：额外的配置标志，用于指定 FFmpeg 的配置参数。</li></ul></li><li><strong><code>build_android</code> 函数</strong>： 这是一个用于编译 FFmpeg 的函数，其中包含了 FFmpeg 配置和编译的命令。</li><li><strong>编译不同架构的 FFmpeg</strong>： 该脚本编译了两种不同架构的 FFmpeg 库，分别是 <code>arm64-v8a</code> 和 <code>armeabi-v7a</code>。每个架构都会有自己的设置和编译步骤。</li><li><strong>具体设置</strong>：<ul><li>每个架构的设置包括了输出路径、交叉编译器前缀、编译器路径等。这些设置确保了 FFmpeg 能够正确地在特定的架构上编译和运行。</li></ul></li><li><strong>调用 <code>build_android</code> 函数</strong>： 最后，脚本分别调用了 <code>build_android</code> 函数来编译 <code>arm64-v8a</code> 和 <code>armeabi-v7a</code> 架构的 FFmpeg 库。</li></ol><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ol><li><code>--prefix=$OUTPUT</code>：指定了安装 FFmpeg 的前缀路径，即编译后生成的文件将要被安装到的目录。</li><li><code>--target-os=android</code>：指定了目标操作系统是 Android。</li><li><code>--arch=$ARCH</code>：指定了架构类型，如 <code>arm64</code> 或 <code>arm</code>。</li><li><code>--cpu=$CPU</code>：指定了特定的 CPU 类型，如 <code>armv8-a</code> 或 <code>armv7-a</code>。</li><li><code>--enable-asm</code>：允许使用汇编代码优化。</li><li><code>--enable-neon</code>：在 ARM 架构上启用 NEON 指令集优化。</li><li><code>--enable-cross-compile</code>：启用交叉编译，这意味着你将在一个平台上为另一个平台编译代码。</li><li><code>--disable-shared</code>：禁用动态库（<code>.so</code> 文件）的生成。</li><li><code>--enable-static</code>：启用静态库（<code>.a</code> 文件）的生成。</li><li><code>--disable-doc</code>：禁用文档的生成。</li><li><code>--disable-ffplay</code>：禁用 FFplay 的编译。</li><li><code>--disable-ffprobe</code>：禁用 FFprobe 的编译。</li><li><code>--disable-symver</code>：禁用符号版本控制。</li><li><code>--disable-ffmpeg</code>：禁用 FFmpeg 二进制文件的编译。</li><li><code>--sysroot=$SYSROOT</code>：指定了系统根目录路径，这对于交叉编译是必需的。</li><li><code>--cross-prefix=$CROSS_PREFIX</code>：指定了交叉编译的前缀，用于交叉编译工具链的命令。</li><li><code>--cc=$CC</code>：指定了 C 编译器的路径。</li><li><code>--cxx=$CXX</code>：指定了 C++ 编译器的路径。</li><li><code>--extra-cflags=&quot;-fPIC&quot;</code>：传递额外的 C 语言编译器标志，<code>-fPIC</code> 表示生成与位置无关的代码，这对于生成共享库是必要的。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#make clean</span></span><br><span class="line">API=21</span><br><span class="line"><span class="comment">#记得换路径！！！这里必须换</span></span><br><span class="line">NDK=/home/cherry/workspace/Android/Sdk/ndk/21.3.6528147</span><br><span class="line"><span class="comment">#记得换路径！！！</span></span><br><span class="line">TOOLCHAIN=<span class="variable">$NDK</span>/toolchains/llvm/prebuilt/linux-x86_64</span><br><span class="line"><span class="comment">#记得换路径！！！</span></span><br><span class="line">SYSROOT=<span class="variable">$TOOLCHAIN</span>/sysroot</span><br><span class="line"></span><br><span class="line">ADDITIONAL_CONFIGURE_FLAG=<span class="string">&quot;--enable-avdevice --enable-avcodec --enable-avformat --enable-swresample --enable-swscale --enable-postproc --enable-avfilter&quot;</span></span><br><span class="line"><span class="function"><span class="title">build_android</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;===========================1========================&quot;</span></span><br><span class="line">  ./configure \</span><br><span class="line">  --prefix=<span class="variable">$OUTPUT</span> \</span><br><span class="line">  --target-os=android \</span><br><span class="line">  --<span class="built_in">arch</span>=<span class="variable">$ARCH</span> \</span><br><span class="line">  --cpu=<span class="variable">$CPU</span> \</span><br><span class="line">  --enable-asm \</span><br><span class="line">  --enable-neon \</span><br><span class="line">  --enable-cross-compile \</span><br><span class="line">  --disable-shared \</span><br><span class="line">  --enable-static \</span><br><span class="line">  --disable-doc \</span><br><span class="line">  --disable-ffplay \</span><br><span class="line">  --disable-ffprobe \</span><br><span class="line">  --disable-symver \</span><br><span class="line">  --disable-ffmpeg \</span><br><span class="line">  --sysroot=<span class="variable">$SYSROOT</span> \</span><br><span class="line">  --cross-prefix=<span class="variable">$CROSS_PREFIX</span> \</span><br><span class="line">  --cc=<span class="variable">$CC</span> \</span><br><span class="line">  --cxx=<span class="variable">$CXX</span> \</span><br><span class="line">  --extra-cflags=<span class="string">&quot;-fPIC&quot;</span> \</span><br><span class="line">  <span class="variable">$ADDITIONAL_CONFIGURE_FLAG</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;===========================2=====================&quot;</span></span><br><span class="line">  make clean</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;=============================<span class="variable">$&#123;CC&#125;</span>===============&quot;</span></span><br><span class="line">  make -j16</span><br><span class="line">  make install</span><br><span class="line">  <span class="variable">$COMBILE_TOOLCHAIN_LD</span> \</span><br><span class="line">-rpath-link=<span class="variable">$COMBILE_PLATFORM</span>/usr/lib \</span><br><span class="line">-L<span class="variable">$COMBILE_PLATFORM</span>/usr/lib \</span><br><span class="line">-L<span class="variable">$OUTPUT</span>/lib \</span><br><span class="line">-soname libffmpeg.so -shared -nostdlib -Bsymbolic --whole-archive --no-undefined -o \</span><br><span class="line"><span class="variable">$OUTPUT</span>/libffmpeg.so \</span><br><span class="line">    libavcodec/libavcodec.a \</span><br><span class="line">    libavfilter/libavfilter.a \</span><br><span class="line">    libswresample/libswresample.a \</span><br><span class="line">    libavformat/libavformat.a \</span><br><span class="line">    libavutil/libavutil.a \</span><br><span class="line">    libavdevice/libavdevice.a \</span><br><span class="line">    libswscale/libswscale.a \</span><br><span class="line">    -lc -lm -lz -ldl -llog --dynamic-linker=/system/bin/linker \</span><br><span class="line">    <span class="variable">$COMBILE_TOOLCHAIN_GCC</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#arm64-v8a</span></span><br><span class="line">ARCH=arm64</span><br><span class="line">CPU=armv8-a</span><br><span class="line">CPU_INSTRUCT_COMMON=aarch64-linux-android</span><br><span class="line"><span class="comment">#记得换路径！！！这里必须换</span></span><br><span class="line">OUTPUT=/home/cherry/FFmpeg-n4.4.4/ffbuild/<span class="variable">$CPU</span></span><br><span class="line">CROSS_PREFIX=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-    <span class="comment">#AR AS LD等通用</span></span><br><span class="line">CC=<span class="variable">$TOOLCHAIN</span>/bin/aarch64-linux-android<span class="variable">$API</span>-clang     <span class="comment">#CC单独指定，非通用(因为ndk中CC与AR路径不同，后同理)</span></span><br><span class="line">CXX=<span class="variable">$TOOLCHAIN</span>/bin/aarch64-linux-android<span class="variable">$API</span>-clang++  <span class="comment">#CXX单独指定，非通用</span></span><br><span class="line">COMBILE_PLATFORM=<span class="variable">$NDK</span>/platforms/android-<span class="variable">$API</span>/arch-arm64 <span class="comment">#</span></span><br><span class="line">COMBILE_TOOLCHAIN_LD=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-ld</span><br><span class="line">COMBILE_TOOLCHAIN_GCC=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/lib/gcc/<span class="variable">$CPU_INSTRUCT_COMMON</span>/4.9.x/libgcc.a</span><br><span class="line">build_android</span><br><span class="line"></span><br><span class="line"><span class="comment">#armeabi-v7a</span></span><br><span class="line">ARCH=arm</span><br><span class="line">CPU=armv7-a</span><br><span class="line">CPU_INSTRUCT_COMMON=arm-linux-androideabi</span><br><span class="line"><span class="comment">#记得换路径！！！这里必须换</span></span><br><span class="line">OUTPUT=/home/cherry/FFmpeg-n4.4.4/ffbuild/<span class="variable">$CPU</span></span><br><span class="line">CROSS_PREFIX=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-       <span class="comment">#AR AS LD等通用</span></span><br><span class="line">CC=<span class="variable">$TOOLCHAIN</span>/bin/armv7a-linux-androideabi<span class="variable">$API</span>-clang     <span class="comment">#CC单独指定，非通用</span></span><br><span class="line">CXX=<span class="variable">$TOOLCHAIN</span>/bin/armv7a-linux-androideabi<span class="variable">$API</span>-clang++  <span class="comment">#CXX单独指定，非通用</span></span><br><span class="line">COMBILE_PLATFORM=<span class="variable">$NDK</span>/platforms/android-<span class="variable">$API</span>/arch-arm</span><br><span class="line">COMBILE_TOOLCHAIN_LD=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/bin/<span class="variable">$CPU_INSTRUCT_COMMON</span>-ld</span><br><span class="line">COMBILE_TOOLCHAIN_GCC=<span class="variable">$NDK</span>/toolchains/<span class="variable">$CPU_INSTRUCT_COMMON</span>-4.9/prebuilt/linux-x86_64/lib/gcc/<span class="variable">$CPU_INSTRUCT_COMMON</span>/4.9.x/libgcc.a</span><br><span class="line">build_android</span><br></pre></td></tr></table></figure><h2 id="链接为多个库"><a href="#链接为多个库" class="headerlink" title="链接为多个库"></a>链接为多个库</h2><p>使用<code>ndk-build-split.sh</code>，其余步骤一样。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;将-FFmpeg-编译成单独的动态链接库&quot;&gt;&lt;a href=&quot;#将-FFmpeg-编译成单独的动态链接库&quot; class=&quot;headerlink&quot; title=&quot;将 FFmpeg 编译成单独的动态链接库&quot;&gt;&lt;/a&gt;将 FFmpeg 编译成单独的动态链接库&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="Code" scheme="http://hanser-chan.github.io/categories/Code/"/>
    
    
    <category term="Linux" scheme="http://hanser-chan.github.io/tags/Linux/"/>
    
    <category term="C++" scheme="http://hanser-chan.github.io/tags/C/"/>
    
    <category term="xiaomi" scheme="http://hanser-chan.github.io/tags/xiaomi/"/>
    
  </entry>
  
</feed>
